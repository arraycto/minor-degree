<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huc.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.huc.bean.User">
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="phones" jdbcType="VARCHAR" property="phones" />
    <result column="email" jdbcType="VARCHAR" property="email" />
      <result column="card_id" jdbcType="VARCHAR" property="cardId" />
    <result column="identity" jdbcType="VARCHAR" property="identity" />
    <result column="reserved1" jdbcType="VARCHAR" property="reserved1" />
    <result column="reserved2" jdbcType="VARCHAR" property="reserved2" />
    <result column="reserved3" jdbcType="VARCHAR" property="reserved3" />
    <result column="reserved4" jdbcType="VARCHAR" property="reserved4" />
  </resultMap>
  <insert id="insert" parameterType="com.huc.bean.User">
    insert into tb_users (user_id, username, password, 
      name, sex, age, phones, 
      email, identity, card_id, reserved1,
      reserved2, reserved3, reserved4
      )
    values (default, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{name,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{phones,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{identity,jdbcType=VARCHAR}, #{cardId,jdbcType=VARCHAR}, #{reserved1,jdbcType=VARCHAR},
      #{reserved2,jdbcType=VARCHAR}, #{reserved3,jdbcType=VARCHAR}, #{reserved4,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.huc.bean.User">
    insert into tb_users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="phones != null">
        phones,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="identity != null">
        identity,
      </if>
      <if test="reserved1 != null">
        reserved1,
      </if>
      <if test="reserved2 != null">
        reserved2,
      </if>
      <if test="reserved3 != null">
        reserved3,
      </if>
      <if test="reserved4 != null">
        reserved4,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="phones != null">
        #{phones,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="identity != null">
        #{identity,jdbcType=VARCHAR},
      </if>
      <if test="reserved1 != null">
        #{reserved1,jdbcType=VARCHAR},
      </if>
      <if test="reserved2 != null">
        #{reserved2,jdbcType=VARCHAR},
      </if>
      <if test="reserved3 != null">
        #{reserved3,jdbcType=VARCHAR},
      </if>
      <if test="reserved4 != null">
        #{reserved4,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
    <select id="login" resultMap="BaseResultMap">
        select user_id,name,identity from tb_users where username = #{username} and password = #{password};
    </select>
    <delete id="delUser">
        delete from tb_users where user_id = #{id}
    </delete>
    <select id="updateUserSelectById" resultMap="BaseResultMap">
        select * from tb_users where user_id = #{userId}
    </select>
    <update id="updateUser" parameterType="com.huc.bean.User">
        update tb_users set username=#{username},password=#{password},name=#{name},sex=#{sex},age=#{age},phones=#{phones},email=#{email},identity=#{identity} where user_id=#{userId}
    </update>
    <select id="adminQueryUser" resultMap="BaseResultMap">
        select user_id,username,password,name,sex,age,phones,email,identity from tb_users where identity != "admin" limit #{start},10;
    </select>
    <select id="queryUserUsername" resultMap="BaseResultMap">
        select username from tb_users where name = #{name};
    </select>
    <select id="queryUserCardId" resultMap="BaseResultMap">
        select card_id from tb_users where user_id = #{userId};
    </select>
    <select id="queryUserNameById" resultMap="BaseResultMap">
        select username from tb_users where user_id = #{userId};
    </select>
    <select id="queryUserNameByUsername" resultMap="BaseResultMap">
        select name from tb_users where username = #{username}
    </select>
    <delete id="deleteUserById" parameterType="com.huc.bean.User">
        delete from tb_users where user_id = #{userId}
    </delete>
</mapper>